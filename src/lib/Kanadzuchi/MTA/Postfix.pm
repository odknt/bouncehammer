# $Id: Postfix.pm,v 1.2 2010/07/05 02:27:04 ak Exp $
# Kanadzuchi::MTA::
                                               
 #####                  ##    ###  ##          
 ##  ##  ####   ##### ###### ##        ##  ##  
 ##  ## ##  ## ##       ##  ##### ###   ####   
 #####  ##  ##  ####    ##   ##    ##    ##    
 ##     ##  ##     ##   ##   ##    ##   ####   
 ##      ####  #####     ### ##   #### ##  ##  
package Kanadzuchi::MTA::Postfix;
use base 'Kanadzuchi::MTA';
use strict;
use warnings;

#  ____ ____ ____ ____ ____ ____ _________ ____ ____ ____ ____ 
# ||G |||l |||o |||b |||a |||l |||       |||v |||a |||r |||s ||
# ||__|||__|||__|||__|||__|||__|||_______|||__|||__|||__|||__||
# |/__\|/__\|/__\|/__\|/__\|/__\|/_______\|/__\|/__\|/__\|/__\|
#
# Postfix manual - bounce(5) - http://www.postfix.org/bounce.5.html
my $RxPostfix = {
	'thepostfix' => qr{\A\s+The Postfix program\z},
	'mailsystem' => qr{\A\s+The mail system\z},
};

#  ____ ____ ____ ____ ____ _________ ____ ____ ____ ____ ____ ____ ____ 
# ||C |||l |||a |||s |||s |||       |||M |||e |||t |||h |||o |||d |||s ||
# ||__|||__|||__|||__|||__|||_______|||__|||__|||__|||__|||__|||__|||__||
# |/__\|/__\|/__\|/__\|/__\|/_______\|/__\|/__\|/__\|/__\|/__\|/__\|/__\|
#
sub reperit
{
	# +-+-+-+-+-+-+-+
	# |r|e|p|e|r|i|t|
	# +-+-+-+-+-+-+-+
	#
	# @Description	Detect an error from qmail
	# @Param <ref>	(Ref->Hash) Message header
	# @Param <ref>	(Ref->String) Message body
	# @Return	(String) Pseudo header content
	my $class = shift();
	my $mhead = shift() || return q();
	my $mbody = shift() || return q();

	#  ____           _    __ _      
	# |  _ \ ___  ___| |_ / _(_)_  __
	# | |_) / _ \/ __| __| |_| \ \/ /
	# |  __/ (_) \__ \ |_|  _| |>  < 
	# |_|   \___/|___/\__|_| |_/_/\_\
	#                                
	# Pre-Process eMail headers and body part of message which generated by Postfix
	#   e.g.) From: MAILER-DAEMON (Mail Delivery System)
	#         Subject: Undelivered Mail Returned to Sender
	return q() unless( $mhead->{'subject'} eq 'Undelivered Mail Returned to Sender' );
	return q() unless( $mhead->{'from'} =~ m{ [(]Mail Delivery System[)]\z} );

	my $xflag = 0;		# (Integer) Flag, 1 = is Posftix, 2 = <addr>...said:, 4 = Reporting MTA
	my $phead = q();	# (String) Pseudo email header
	my $pbody = q();	# (String) Pseudo body part
	my $xsmtp = q();	# (String) SMTP Command in transcript of session

	my $rhostsaid = q();	# Remote host said: ...
	my $statintxt = q();	# #n.n.n Status code in message body

	EACH_LINE: foreach my $el ( split( qq{\n}, $$mbody ) )
	{
		if( $xflag == 0 && 
			( $el =~ $RxPostfix->{'mailsystem'} || $el =~ $RxPostfix->{'thepostfix'} ) ){

			# The mail system
			# The Postfix program
			$xflag |= 1;
			next();
		}

		if( ( $xflag & 1 ) && ! ( $xflag & 4 ) )
		{
			# <recipient@example.com>: host mx.example.com [102.0.2.3] said:
			# <recipient@example.net> (expanded from <user@example.net>): host ...
			# $xflag |= 2 if( $el =~ m{\A[<].+[@].+[>][:]} || $el =~ m{\A[<].+[@].+[>] [(]expanded from} );
			$xflag |= 2 if( $el =~ m{\A[<].+[@].+[>][:]?} );
			$rhostsaid .= $el if( $xflag == 3 && $rhostsaid !~ m{ command[)]\z} );

			# Reporting-MTA: dns; mx.example.jp
			# X-Postfix-Queue-ID: FFFFFFFF0000
			# X-Postfix-Sender: rfc822; daemon@example.net
			# Arrival-Date: Wed, 29 Apr 2009 16:03:18 +0900
			#
			$xflag |= 4 if( $el =~ m{\AReporting-MTA: } );
			next();
		}

		if( ( $xflag & 2 ) && length($xsmtp) == 0 )
		{
			#                   The mail system
			#
			# <recipient@example.com>: host mx.example.com [102.0.2.3] said:
			#    550 Unknown user recipient@example.com (in reply to end of DATA
			#    command)
			$rhostsaid =~ y{ }{ }s;
			$statintxt = 'Status: '.$1 if( $rhostsaid =~ m{[ ]([45][.][0-7][.][0-7])[ ]} );
			$xsmtp = $1 if( $rhostsaid =~ m{[(]in reply to .*([A-Z]{4}).*command[)]} );
		}

		if( $xflag & 7 )
		{
			if( $el =~ m{\AStatus: } && length($statintxt) )
			{
				# Rewrite 'Status: x.y.z'
				$phead .= $statintxt.qq(\n);
			}
			else
			{
				$pbody .= $el.qq(\n)
			}
		}
	}

	$xsmtp ||= 'CONN';
	$phead  .= __PACKAGE__->xsmtpcommand().$xsmtp.qq(\n);
	return $phead.$pbody;
}

1;
__END__
